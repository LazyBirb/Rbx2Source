using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

using Rbx2Source.Assembler;

namespace Rbx2Source.StudioMdl
{
    /// <summary>
    /// Writer Implementation for Source's Studiomdl Data format.
    /// See: https://developer.valvesoftware.com/wiki/Studiomdl_Data
    /// </summary>

    public class StudioMdlWriter : IDisposable
    {
        private StringWriter buffer;

        public List<Node> Nodes;
        public List<Triangle> Triangles;
        public List<BoneKeyframe> Skeleton;
        public Dictionary<string, ValveMaterial> Materials;

        private void WriteEntities<T>(List<T> entities) where T : IStudioMdlEntity<T>
        {
            if (entities.Count > 0)
            {
                var groupName = entities[0].GroupName;
                buffer.WriteLine('\n' + groupName);

                foreach (T entity in entities)
                    entity.WriteStudioMdl(buffer, entities);

                buffer.WriteLine("end");
            }
        }

        public string BuildFile(bool writeGeometry = true)
        {
            buffer = new StringWriter();

            buffer.WriteLine("// Generated by CloneTrooper1019's Rbx2Source tool!");
            buffer.WriteLine("// Please do not edit this file while the program is running.");
            buffer.WriteLine("// The file was set to read-only for a reason ;)\n");
            buffer.WriteLine("version 1");

            WriteEntities(Nodes);
            WriteEntities(Skeleton);

            if (writeGeometry)
                WriteEntities(Triangles);

            return buffer.ToString();
        }

        public StudioMdlWriter()
        {
            Nodes     = new List<Node>();
            Triangles = new List<Triangle>();
            Skeleton  = new List<BoneKeyframe>();
            Materials = new Dictionary<string, ValveMaterial>();
        }

        public void Dispose()
        {
            Dispose(true);
            GC.SuppressFinalize(this);
        }

        protected virtual void Dispose(bool disposing)
        {
            buffer.Dispose();
        }
    }
}
